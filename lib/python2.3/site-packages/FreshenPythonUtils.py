# Copyright (C) 2007-2008 Michael Homer <=mwh>
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

def decorator(decorator, *a):
	def new(func):
		def new2(*args):
			return decorator(func, *args)
		new2.__name__ = func.__name__
		new2.__doc__ = func.__doc__
		new2.__dict__.update(func.__dict__)
		return new2
	return new

@decorator
def memoised(func, *args):
	if not hasattr(func, '_cache'):
		func._cache = dict()
	d = func._cache
	if args in d: return d[args]
	result = func(*args)
	d[args] = result
	return result
