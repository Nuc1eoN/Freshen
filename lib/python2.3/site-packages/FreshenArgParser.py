import sys

class FreshenArgParser(object):
	def __init__(self, ui):
		self.fetched = False
		self.ui = ui
		self.fetch()

	def fetch(self):
		if self.fetched:
			return
		self.fetched = True
		self.skipSet = set()
		self.examineSet = set()
		self.mode = 'updating'
		self.noCache = False
		self.forceCache = False
		self.action = self.ui.showUpdates
		self.limit = None
		
		catching = self.examineSet
		singleCatch = ''
		for arg in sys.argv[1:]:
			if arg=='-x' or arg=='--exclude':
				catching = self.skipSet
			else:
				# Reset catching to examineSet if we hit a non-list option
				reset = True
				if arg=='--thorough':
					self.mode = 'all'
				elif arg=='--no-cache' or arg=='-C':
					self.noCache = True
				elif arg=='--force-cache' or arg=='-c':
					self.forceCache = True
				elif arg=='--shallow' or arg=='-s':
					self.mode = 'missing'
				elif arg=='--install':
					self.mode = 'missing'
					self.action = self.ui.installUpdates
				elif arg=='--limit' or arg=='-l':
					singleCatch = 'limit'
				elif arg=='-U':
					self.action = self.ui.installUpdates
				elif arg=='--help':
					self.action = self.ui.showHelp
				elif arg=='--version':
					self.action = self.ui.showVersion
				elif arg=='--no-colour':
					for c in Screen.colours:
						Screen.colours[c] = ''
				elif arg=='--':
					# To allow breaking out of multi-argument sections into the examine list
					# e.g. Freshen -x foo bar -- baz quux
					catching = self.examineSet
				elif singleCatch:
					self.__dict__[singleCatch] = arg
					singleCatch = ''
				elif arg[0:2]=='--':
					Log_Error("Invalid argument "+arg, 'Freshen')
					exit()
				else:
					catching.add(arg)
					reset = False
				if reset: catching = self.examineSet
		self.progString = ', '.join(self.examineSet)
		self.examineSet = frozenset(self.examineSet)
		self.skipSet = frozenset(self.skipSet)
