# Copyright (C) 2008 Michael Homer <=mwh>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


class Update(object):

    def __init__(self, tup, intBy=None, activeFlags=frozenset(),
                enabledFlags=frozenset(), disabledFlags=frozenset()):
        self.program, self.version, self.revision, self.type, self.url = tup
        self.introducedBy = intBy if intBy else self.program
        self.activeFlags = activeFlags
        self.enabledFlags = enabledFlags
        self.disabledFlags = disabledFlags
        self._hash = hash((self.program, self.version,
                           self.revision, self.type))

    def tuple9(self):
        """Return a nine-element tuple of update information, of the
           same form as the previous API."""
        return (self.program, self.version, self.revision, self.type, self.url,
                self.introducedBy, self.enabledFlags, self.disabledFlags,
                self.activeFlags)

    def __eq__(self, other):
        if self.program != other.program:
            return False
        if self.version != other.version:
            return False
        if self.revision != other.revision:
            return False
        if self.type != other.type:
            return False
        return True

    def __ne__(self, other):
        return not (self == other)

    def __hash__(self):
        return self._hash
