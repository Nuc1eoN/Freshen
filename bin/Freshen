#!/usr/bin/ruby
# Copyright (C) 2007 Michael Homer
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Include Freshen libraries as well
dirname = File.dirname(`readlink -f #{$0}`)
$: << File.expand_path("#{dirname}/../lib/")

require 'version'
require 'consoleapplication'
require 'repository'
require 'reciperepository'
require 'programrepository'
require 'collectionrepository'

class Freshen < ConsoleApplication
	version "3.0.0alpha1"
	description "Updates GoboLinux recipes and packages"
	credits "Copyright (C) 2007 Michael Homer <michael@e.geek.nz>"
	usage "[<opts>] [<mode>] [<list>]"

	has_mode :upgrade, 'Upgrade the packages listed, or the whole system if none specified', :U
	has_mode :info, 'Display detailed information about the listed program(s)', :i
	has_opt :exclude, 'Exclude <list> from consideration', :x
	
	def run_upgrade(list)
		out "Would upgrade #{list.join(', ')}"
		out "Would exclude #{option(:exclude)[:list].join(', ')}"
	end
	
	def run_info(list) 
		out "Would display info for #{list.join}"
	end
	
	def run_default(list)
		out "Would display upgrades for #{list.join(', ')}"
#		out "Would exclude #{option(:exclude)[:list].join(', ')}"
		begin
		p = ProgramRepository.new
		r = RecipeRepository.new('/Files/Compile/Recipes', nil)
		p.all.each {|prog|
			vs = r[p.name]
			if vs[-1] > prog.current
				out "New version of #{prog}: #{vs[-1]}"
			end
		}
		rescue Exception
			backtrace
		end
	end
end

ConsoleApplication.run Freshen